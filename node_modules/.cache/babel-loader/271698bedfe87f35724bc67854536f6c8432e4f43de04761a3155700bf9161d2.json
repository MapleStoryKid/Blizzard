{"ast":null,"code":"var _jsxFileName = \"E:\\\\byh\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\blizzard\\\\src\\\\Components\\\\Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  // Use the useState hook to create a \"scroll\" state variable\n  // that we can use to track the current scroll position\n  const [scroll, setScroll] = useState(0);\n\n  // Use the useEffect hook to add an event listener that\n  // updates the scroll state variable when the user scrolls\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      setScroll(window.scrollY);\n    });\n  });\n\n  // Use a styled-components <nav> element to create the nav bar\n  const Header = styled.nav`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n\n    /* Set the initial background color to transparent */\n    background-color: transparent;\n\n    /* Use the scroll state variable to gradually fade the nav bar\n       to white as the user scrolls down the page */\n    background-color: rgba(255, 255, 255, ${scroll / 100});\n  `;\n  return /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(NavBar, \"JTWh8Ghx6FsMkBul6++zT/uRfFc=\");\n_c = NavBar;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","styled","NavBar","scroll","setScroll","window","addEventListener","scrollY","Header","nav"],"sources":["E:/byh/프로젝트/blizzard/src/Components/Header.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NavBar = () => {\r\n  // Use the useState hook to create a \"scroll\" state variable\r\n  // that we can use to track the current scroll position\r\n  const [scroll, setScroll] = useState(0);\r\n\r\n  // Use the useEffect hook to add an event listener that\r\n  // updates the scroll state variable when the user scrolls\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      setScroll(window.scrollY);\r\n    });\r\n  });\r\n\r\n  // Use a styled-components <nav> element to create the nav bar\r\n  const Header = styled.nav`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n\r\n    /* Set the initial background color to transparent */\r\n    background-color: transparent;\r\n\r\n    /* Use the scroll state variable to gradually fade the nav bar\r\n       to white as the user scrolls down the page */\r\n    background-color: rgba(255, 255, 255, ${scroll / 100});\r\n  `;\r\n\r\n  return (\r\n    <Header>\r\n      {/* Add your nav bar content here */}\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;;EAEvC;EACA;EACAC,SAAS,CAAC,MAAM;IACdK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACtCF,SAAS,CAACC,MAAM,CAACE,OAAO,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4CN,MAAM,GAAG,GAAI;AACzD,GAAG;EAED,oBACE,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAEE;AAEb,CAAC;AAAC,GAlCID,MAAM;AAAA,KAANA,MAAM;AAoCZ,eAAeM,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}